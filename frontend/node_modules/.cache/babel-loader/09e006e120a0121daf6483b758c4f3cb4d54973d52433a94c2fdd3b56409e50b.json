{"ast":null,"code":"import _objectSpread from\"C:/Users/Tomas Mraz/Desktop/Branmedia/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect}from'react';import socket from'../utils/socket';// Centralized socket instance\nimport Sidebar from'./Sidebar';import'./Orders.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Orders=_ref=>{let{onLogout}=_ref;const[orders,setOrders]=useState([]);const[showPopup,setShowPopup]=useState(false);const[newOrder,setNewOrder]=useState({customer_name:'',invoice_status:'Paid',// Default selection\ninvoice_number:'',created_by:localStorage.getItem('username')// Initialize with an empty string\n});useEffect(()=>{// Confirm socket connection\nsocket.on('connect',()=>{console.log('Socket connected:',socket.id);});// Fetch initial orders\nconst fetchOrders=async()=>{try{const response=await fetch('https://branmedia.onrender.com/api/orders',{headers:{Authorization:\"Bearer \".concat(localStorage.getItem('token'))}});if(!response.ok){throw new Error(\"Error fetching orders: \".concat(response.statusText));}const data=await response.json();setOrders(data);console.log('Fetched initial orders:',data);}catch(error){console.error('Error fetching orders:',error);}};fetchOrders();// Fetch the logged-in user's name and set it for the \"Created By\" field\n/*const fetchUserEmail = () => {\r\n            const email = localStorage.getItem('email'); // Retrieve the email from local storage\r\n            if (email) {\r\n                setNewOrder((prevOrder) => ({\r\n                    ...prevOrder,\r\n                    created_by: email, // Use the email to prefill the 'Created By' field\r\n                }));\r\n            }\r\n        };\r\n    \r\n        fetchUserEmail();*//*const fetchUserName = () => {\r\n            const username = localStorage.getItem('username'); // Retrieve the email from local storage\r\n            if (username) {\r\n                setNewOrder((prevOrder) => ({\r\n                    ...prevOrder,\r\n                    created_by: username, // Use the email to prefill the 'Created By' field\r\n                }));\r\n            }\r\n        };\r\n    \r\n        fetchUserName();*/// Listen for real-time updates\nsocket.on('ordersUpdate',updatedOrders=>{console.log('Received orders update:',updatedOrders);setOrders(updatedOrders);});// Cleanup function to avoid memory leaks\nreturn()=>{socket.off('ordersUpdate');};},[]);const handleAddOrder=async()=>{try{const response=await fetch('https://branmedia.onrender.com/api/orders',{method:'POST',headers:{'Content-Type':'application/json',Authorization:\"Bearer \".concat(localStorage.getItem('token'))},body:JSON.stringify(newOrder)});if(!response.ok){throw new Error(\"Error adding order: \".concat(response.statusText));}const result=await response.json();console.log('Order added successfully:',result);setShowPopup(false);// Close the popup\nsetNewOrder({customer_name:'',invoice_status:'Paid',invoice_number:'',created_by:localStorage.getItem('email')||''});}catch(error){console.error('Error adding order:',error);}};const handleInputChange=e=>{const{name,value}=e.target;setNewOrder(_objectSpread(_objectSpread({},newOrder),{},{[name]:value}));};return/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex'},children:[/*#__PURE__*/_jsx(Sidebar,{onLogout:onLogout}),/*#__PURE__*/_jsxs(\"div\",{className:\"orders-content\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Orders\"}),/*#__PURE__*/_jsx(\"button\",{className:\"add-order-button\",onClick:()=>setShowPopup(true),children:\"Add Order\"}),/*#__PURE__*/_jsxs(\"table\",{className:\"orders-table\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"ID\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Customer Name\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Invoice Status\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Invoice Number\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Created By\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Created At\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Updated At\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:orders.map(order=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:order.id}),/*#__PURE__*/_jsx(\"td\",{children:order.customer_name}),/*#__PURE__*/_jsx(\"td\",{children:order.invoice_status}),/*#__PURE__*/_jsx(\"td\",{children:order.invoice_number}),/*#__PURE__*/_jsx(\"td\",{children:order.created_by}),/*#__PURE__*/_jsx(\"td\",{children:new Date(order.created_at).toLocaleString()}),/*#__PURE__*/_jsx(\"td\",{children:new Date(order.updated_at).toLocaleString()})]},order.id))})]}),showPopup&&/*#__PURE__*/_jsx(\"div\",{className:\"popup-overlay\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"popup-content\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Add New Order\"}),/*#__PURE__*/_jsxs(\"label\",{children:[\"Customer Name:\",/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"customer_name\",value:newOrder.customer_name,onChange:handleInputChange,placeholder:\"Enter customer name\"})]}),/*#__PURE__*/_jsxs(\"label\",{children:[\"Invoice Status:\",/*#__PURE__*/_jsxs(\"select\",{name:\"invoice_status\",value:newOrder.invoice_status,onChange:handleInputChange,children:[/*#__PURE__*/_jsx(\"option\",{value:\"Paid\",children:\"Paid\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Unpaid\",children:\"Unpaid\"})]})]}),/*#__PURE__*/_jsxs(\"label\",{children:[\"Invoice Number:\",/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"invoice_number\",value:newOrder.invoice_number,onChange:handleInputChange,placeholder:\"Enter invoice number\"})]}),/*#__PURE__*/_jsxs(\"label\",{children:[\"Created By:\",/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:newOrder.created_by,readOnly:true,placeholder:newOrder.created_by})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"popup-buttons\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:handleAddOrder,className:\"submit-button\",children:\"Submit\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setShowPopup(false),className:\"cancel-button\",children:\"Cancel\"})]})]})})]})]});};export default Orders;","map":{"version":3,"names":["React","useState","useEffect","socket","Sidebar","jsx","_jsx","jsxs","_jsxs","Orders","_ref","onLogout","orders","setOrders","showPopup","setShowPopup","newOrder","setNewOrder","customer_name","invoice_status","invoice_number","created_by","localStorage","getItem","on","console","log","id","fetchOrders","response","fetch","headers","Authorization","concat","ok","Error","statusText","data","json","error","updatedOrders","off","handleAddOrder","method","body","JSON","stringify","result","handleInputChange","e","name","value","target","_objectSpread","style","display","children","className","onClick","map","order","Date","created_at","toLocaleString","updated_at","type","onChange","placeholder","readOnly"],"sources":["C:/Users/Tomas Mraz/Desktop/Branmedia/frontend/src/components/Orders.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport socket from '../utils/socket'; // Centralized socket instance\r\nimport Sidebar from './Sidebar';\r\nimport './Orders.css';\r\n\r\nconst Orders = ({ onLogout }) => {\r\n    const [orders, setOrders] = useState([]);\r\n    const [showPopup, setShowPopup] = useState(false);\r\n    const [newOrder, setNewOrder] = useState({\r\n        customer_name: '',\r\n        invoice_status: 'Paid', // Default selection\r\n        invoice_number: '',\r\n        created_by: localStorage.getItem('username'), // Initialize with an empty string\r\n    });\r\n\r\n    useEffect(() => {\r\n        // Confirm socket connection\r\n        socket.on('connect', () => {\r\n            console.log('Socket connected:', socket.id);\r\n        });\r\n\r\n        // Fetch initial orders\r\n        const fetchOrders = async () => {\r\n            try {\r\n                const response = await fetch('https://branmedia.onrender.com/api/orders', {\r\n                    headers: { Authorization: `Bearer ${localStorage.getItem('token')}` },\r\n                });\r\n                if (!response.ok) {\r\n                    throw new Error(`Error fetching orders: ${response.statusText}`);\r\n                }\r\n                const data = await response.json();\r\n                setOrders(data);\r\n                console.log('Fetched initial orders:', data);\r\n            } catch (error) {\r\n                console.error('Error fetching orders:', error);\r\n            }\r\n        };\r\n\r\n        fetchOrders();\r\n\r\n        // Fetch the logged-in user's name and set it for the \"Created By\" field\r\n        /*const fetchUserEmail = () => {\r\n            const email = localStorage.getItem('email'); // Retrieve the email from local storage\r\n            if (email) {\r\n                setNewOrder((prevOrder) => ({\r\n                    ...prevOrder,\r\n                    created_by: email, // Use the email to prefill the 'Created By' field\r\n                }));\r\n            }\r\n        };\r\n    \r\n        fetchUserEmail();*/\r\n\r\n        /*const fetchUserName = () => {\r\n            const username = localStorage.getItem('username'); // Retrieve the email from local storage\r\n            if (username) {\r\n                setNewOrder((prevOrder) => ({\r\n                    ...prevOrder,\r\n                    created_by: username, // Use the email to prefill the 'Created By' field\r\n                }));\r\n            }\r\n        };\r\n    \r\n        fetchUserName();*/\r\n\r\n        // Listen for real-time updates\r\n        socket.on('ordersUpdate', (updatedOrders) => {\r\n            console.log('Received orders update:', updatedOrders);\r\n            setOrders(updatedOrders);\r\n        });\r\n\r\n        // Cleanup function to avoid memory leaks\r\n        return () => {\r\n            socket.off('ordersUpdate');\r\n        };\r\n    }, []);\r\n\r\n    const handleAddOrder = async () => {\r\n        try {\r\n            const response = await fetch('https://branmedia.onrender.com/api/orders', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n                },\r\n                body: JSON.stringify(newOrder),\r\n            });\r\n\r\n            if (!response.ok) {\r\n                throw new Error(`Error adding order: ${response.statusText}`);\r\n            }\r\n\r\n            const result = await response.json();\r\n            console.log('Order added successfully:', result);\r\n            setShowPopup(false); // Close the popup\r\n            setNewOrder({\r\n                customer_name: '',\r\n                invoice_status: 'Paid',\r\n                invoice_number: '',\r\n                created_by: localStorage.getItem('email') || '',\r\n            });\r\n        } catch (error) {\r\n            console.error('Error adding order:', error);\r\n        }\r\n    };\r\n\r\n    const handleInputChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setNewOrder({ ...newOrder, [name]: value });\r\n    };\r\n\r\n    return (\r\n        <div style={{ display: 'flex' }}>\r\n            <Sidebar onLogout={onLogout} />\r\n            <div className=\"orders-content\">\r\n                <h1>Orders</h1>\r\n                <button className=\"add-order-button\" onClick={() => setShowPopup(true)}>\r\n                    Add Order\r\n                </button>\r\n                <table className=\"orders-table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>Customer Name</th>\r\n                            <th>Invoice Status</th>\r\n                            <th>Invoice Number</th>\r\n                            <th>Created By</th>\r\n                            <th>Created At</th>\r\n                            <th>Updated At</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {orders.map((order) => (\r\n                            <tr key={order.id}>\r\n                                <td>{order.id}</td>\r\n                                <td>{order.customer_name}</td>\r\n                                <td>{order.invoice_status}</td>\r\n                                <td>{order.invoice_number}</td>\r\n                                <td>{order.created_by}</td>\r\n                                <td>{new Date(order.created_at).toLocaleString()}</td>\r\n                                <td>{new Date(order.updated_at).toLocaleString()}</td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n\r\n                {showPopup && (\r\n                    <div className=\"popup-overlay\">\r\n                        <div className=\"popup-content\">\r\n                            <h2>Add New Order</h2>\r\n                            <label>\r\n                                Customer Name:\r\n                                <input\r\n                                    type=\"text\"\r\n                                    name=\"customer_name\"\r\n                                    value={newOrder.customer_name}\r\n                                    onChange={handleInputChange}\r\n                                    placeholder=\"Enter customer name\"\r\n                                />\r\n                            </label>\r\n                            <label>\r\n                                Invoice Status:\r\n                                <select\r\n                                    name=\"invoice_status\"\r\n                                    value={newOrder.invoice_status}\r\n                                    onChange={handleInputChange}\r\n                                >\r\n                                    <option value=\"Paid\">Paid</option>\r\n                                    <option value=\"Unpaid\">Unpaid</option>\r\n                                </select>\r\n                            </label>\r\n                            <label>\r\n                                Invoice Number:\r\n                                <input\r\n                                    type=\"text\"\r\n                                    name=\"invoice_number\"\r\n                                    value={newOrder.invoice_number}\r\n                                    onChange={handleInputChange}\r\n                                    placeholder=\"Enter invoice number\"\r\n                                />\r\n                            </label>\r\n                            <label>\r\n                                Created By:\r\n                                <input\r\n                                    type=\"text\"\r\n                                    value={newOrder.created_by}\r\n                                    readOnly\r\n                                    placeholder={newOrder.created_by}\r\n                                />\r\n                            </label>\r\n                            <div className=\"popup-buttons\">\r\n                                <button onClick={handleAddOrder} className=\"submit-button\">\r\n                                    Submit\r\n                                </button>\r\n                                <button onClick={() => setShowPopup(false)} className=\"cancel-button\">\r\n                                    Cancel\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Orders;\r\n"],"mappings":"mIAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,MAAO,CAAAC,MAAM,KAAM,iBAAiB,CAAE;AACtC,MAAO,CAAAC,OAAO,KAAM,WAAW,CAC/B,MAAO,cAAc,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEtB,KAAM,CAAAC,MAAM,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACxB,KAAM,CAACE,MAAM,CAAEC,SAAS,CAAC,CAAGZ,QAAQ,CAAC,EAAE,CAAC,CACxC,KAAM,CAACa,SAAS,CAAEC,YAAY,CAAC,CAAGd,QAAQ,CAAC,KAAK,CAAC,CACjD,KAAM,CAACe,QAAQ,CAAEC,WAAW,CAAC,CAAGhB,QAAQ,CAAC,CACrCiB,aAAa,CAAE,EAAE,CACjBC,cAAc,CAAE,MAAM,CAAE;AACxBC,cAAc,CAAE,EAAE,CAClBC,UAAU,CAAEC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAG;AAClD,CAAC,CAAC,CAEFrB,SAAS,CAAC,IAAM,CACZ;AACAC,MAAM,CAACqB,EAAE,CAAC,SAAS,CAAE,IAAM,CACvBC,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAEvB,MAAM,CAACwB,EAAE,CAAC,CAC/C,CAAC,CAAC,CAEF;AACA,KAAM,CAAAC,WAAW,CAAG,KAAAA,CAAA,GAAY,CAC5B,GAAI,CACA,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,2CAA2C,CAAE,CACtEC,OAAO,CAAE,CAAEC,aAAa,WAAAC,MAAA,CAAYX,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAG,CACxE,CAAC,CAAC,CACF,GAAI,CAACM,QAAQ,CAACK,EAAE,CAAE,CACd,KAAM,IAAI,CAAAC,KAAK,2BAAAF,MAAA,CAA2BJ,QAAQ,CAACO,UAAU,CAAE,CAAC,CACpE,CACA,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAR,QAAQ,CAACS,IAAI,CAAC,CAAC,CAClCzB,SAAS,CAACwB,IAAI,CAAC,CACfZ,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAEW,IAAI,CAAC,CAChD,CAAE,MAAOE,KAAK,CAAE,CACZd,OAAO,CAACc,KAAK,CAAC,wBAAwB,CAAEA,KAAK,CAAC,CAClD,CACJ,CAAC,CAEDX,WAAW,CAAC,CAAC,CAEb;AACA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAEQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAEQ;AACAzB,MAAM,CAACqB,EAAE,CAAC,cAAc,CAAGgB,aAAa,EAAK,CACzCf,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAEc,aAAa,CAAC,CACrD3B,SAAS,CAAC2B,aAAa,CAAC,CAC5B,CAAC,CAAC,CAEF;AACA,MAAO,IAAM,CACTrC,MAAM,CAACsC,GAAG,CAAC,cAAc,CAAC,CAC9B,CAAC,CACL,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAC,cAAc,CAAG,KAAAA,CAAA,GAAY,CAC/B,GAAI,CACA,KAAM,CAAAb,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,2CAA2C,CAAE,CACtEa,MAAM,CAAE,MAAM,CACdZ,OAAO,CAAE,CACL,cAAc,CAAE,kBAAkB,CAClCC,aAAa,WAAAC,MAAA,CAAYX,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAC1D,CAAC,CACDqB,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC9B,QAAQ,CACjC,CAAC,CAAC,CAEF,GAAI,CAACa,QAAQ,CAACK,EAAE,CAAE,CACd,KAAM,IAAI,CAAAC,KAAK,wBAAAF,MAAA,CAAwBJ,QAAQ,CAACO,UAAU,CAAE,CAAC,CACjE,CAEA,KAAM,CAAAW,MAAM,CAAG,KAAM,CAAAlB,QAAQ,CAACS,IAAI,CAAC,CAAC,CACpCb,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAEqB,MAAM,CAAC,CAChDhC,YAAY,CAAC,KAAK,CAAC,CAAE;AACrBE,WAAW,CAAC,CACRC,aAAa,CAAE,EAAE,CACjBC,cAAc,CAAE,MAAM,CACtBC,cAAc,CAAE,EAAE,CAClBC,UAAU,CAAEC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,EAAI,EACjD,CAAC,CAAC,CACN,CAAE,MAAOgB,KAAK,CAAE,CACZd,OAAO,CAACc,KAAK,CAAC,qBAAqB,CAAEA,KAAK,CAAC,CAC/C,CACJ,CAAC,CAED,KAAM,CAAAS,iBAAiB,CAAIC,CAAC,EAAK,CAC7B,KAAM,CAAEC,IAAI,CAAEC,KAAM,CAAC,CAAGF,CAAC,CAACG,MAAM,CAChCnC,WAAW,CAAAoC,aAAA,CAAAA,aAAA,IAAMrC,QAAQ,MAAE,CAACkC,IAAI,EAAGC,KAAK,EAAE,CAAC,CAC/C,CAAC,CAED,mBACI3C,KAAA,QAAK8C,KAAK,CAAE,CAAEC,OAAO,CAAE,MAAO,CAAE,CAAAC,QAAA,eAC5BlD,IAAA,CAACF,OAAO,EAACO,QAAQ,CAAEA,QAAS,CAAE,CAAC,cAC/BH,KAAA,QAAKiD,SAAS,CAAC,gBAAgB,CAAAD,QAAA,eAC3BlD,IAAA,OAAAkD,QAAA,CAAI,QAAM,CAAI,CAAC,cACflD,IAAA,WAAQmD,SAAS,CAAC,kBAAkB,CAACC,OAAO,CAAEA,CAAA,GAAM3C,YAAY,CAAC,IAAI,CAAE,CAAAyC,QAAA,CAAC,WAExE,CAAQ,CAAC,cACThD,KAAA,UAAOiD,SAAS,CAAC,cAAc,CAAAD,QAAA,eAC3BlD,IAAA,UAAAkD,QAAA,cACIhD,KAAA,OAAAgD,QAAA,eACIlD,IAAA,OAAAkD,QAAA,CAAI,IAAE,CAAI,CAAC,cACXlD,IAAA,OAAAkD,QAAA,CAAI,eAAa,CAAI,CAAC,cACtBlD,IAAA,OAAAkD,QAAA,CAAI,gBAAc,CAAI,CAAC,cACvBlD,IAAA,OAAAkD,QAAA,CAAI,gBAAc,CAAI,CAAC,cACvBlD,IAAA,OAAAkD,QAAA,CAAI,YAAU,CAAI,CAAC,cACnBlD,IAAA,OAAAkD,QAAA,CAAI,YAAU,CAAI,CAAC,cACnBlD,IAAA,OAAAkD,QAAA,CAAI,YAAU,CAAI,CAAC,EACnB,CAAC,CACF,CAAC,cACRlD,IAAA,UAAAkD,QAAA,CACK5C,MAAM,CAAC+C,GAAG,CAAEC,KAAK,eACdpD,KAAA,OAAAgD,QAAA,eACIlD,IAAA,OAAAkD,QAAA,CAAKI,KAAK,CAACjC,EAAE,CAAK,CAAC,cACnBrB,IAAA,OAAAkD,QAAA,CAAKI,KAAK,CAAC1C,aAAa,CAAK,CAAC,cAC9BZ,IAAA,OAAAkD,QAAA,CAAKI,KAAK,CAACzC,cAAc,CAAK,CAAC,cAC/Bb,IAAA,OAAAkD,QAAA,CAAKI,KAAK,CAACxC,cAAc,CAAK,CAAC,cAC/Bd,IAAA,OAAAkD,QAAA,CAAKI,KAAK,CAACvC,UAAU,CAAK,CAAC,cAC3Bf,IAAA,OAAAkD,QAAA,CAAK,GAAI,CAAAK,IAAI,CAACD,KAAK,CAACE,UAAU,CAAC,CAACC,cAAc,CAAC,CAAC,CAAK,CAAC,cACtDzD,IAAA,OAAAkD,QAAA,CAAK,GAAI,CAAAK,IAAI,CAACD,KAAK,CAACI,UAAU,CAAC,CAACD,cAAc,CAAC,CAAC,CAAK,CAAC,GAPjDH,KAAK,CAACjC,EAQX,CACP,CAAC,CACC,CAAC,EACL,CAAC,CAEPb,SAAS,eACNR,IAAA,QAAKmD,SAAS,CAAC,eAAe,CAAAD,QAAA,cAC1BhD,KAAA,QAAKiD,SAAS,CAAC,eAAe,CAAAD,QAAA,eAC1BlD,IAAA,OAAAkD,QAAA,CAAI,eAAa,CAAI,CAAC,cACtBhD,KAAA,UAAAgD,QAAA,EAAO,gBAEH,cAAAlD,IAAA,UACI2D,IAAI,CAAC,MAAM,CACXf,IAAI,CAAC,eAAe,CACpBC,KAAK,CAAEnC,QAAQ,CAACE,aAAc,CAC9BgD,QAAQ,CAAElB,iBAAkB,CAC5BmB,WAAW,CAAC,qBAAqB,CACpC,CAAC,EACC,CAAC,cACR3D,KAAA,UAAAgD,QAAA,EAAO,iBAEH,cAAAhD,KAAA,WACI0C,IAAI,CAAC,gBAAgB,CACrBC,KAAK,CAAEnC,QAAQ,CAACG,cAAe,CAC/B+C,QAAQ,CAAElB,iBAAkB,CAAAQ,QAAA,eAE5BlD,IAAA,WAAQ6C,KAAK,CAAC,MAAM,CAAAK,QAAA,CAAC,MAAI,CAAQ,CAAC,cAClClD,IAAA,WAAQ6C,KAAK,CAAC,QAAQ,CAAAK,QAAA,CAAC,QAAM,CAAQ,CAAC,EAClC,CAAC,EACN,CAAC,cACRhD,KAAA,UAAAgD,QAAA,EAAO,iBAEH,cAAAlD,IAAA,UACI2D,IAAI,CAAC,MAAM,CACXf,IAAI,CAAC,gBAAgB,CACrBC,KAAK,CAAEnC,QAAQ,CAACI,cAAe,CAC/B8C,QAAQ,CAAElB,iBAAkB,CAC5BmB,WAAW,CAAC,sBAAsB,CACrC,CAAC,EACC,CAAC,cACR3D,KAAA,UAAAgD,QAAA,EAAO,aAEH,cAAAlD,IAAA,UACI2D,IAAI,CAAC,MAAM,CACXd,KAAK,CAAEnC,QAAQ,CAACK,UAAW,CAC3B+C,QAAQ,MACRD,WAAW,CAAEnD,QAAQ,CAACK,UAAW,CACpC,CAAC,EACC,CAAC,cACRb,KAAA,QAAKiD,SAAS,CAAC,eAAe,CAAAD,QAAA,eAC1BlD,IAAA,WAAQoD,OAAO,CAAEhB,cAAe,CAACe,SAAS,CAAC,eAAe,CAAAD,QAAA,CAAC,QAE3D,CAAQ,CAAC,cACTlD,IAAA,WAAQoD,OAAO,CAAEA,CAAA,GAAM3C,YAAY,CAAC,KAAK,CAAE,CAAC0C,SAAS,CAAC,eAAe,CAAAD,QAAA,CAAC,QAEtE,CAAQ,CAAC,EACR,CAAC,EACL,CAAC,CACL,CACR,EACA,CAAC,EACL,CAAC,CAEd,CAAC,CAED,cAAe,CAAA/C,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}